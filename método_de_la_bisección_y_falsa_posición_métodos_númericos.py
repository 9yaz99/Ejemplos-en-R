# -*- coding: utf-8 -*-
"""MÉTODO DE LA BISECCIÓN Y FALSA POSICIÓN_Métodos númericos

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tAVjkO7kqStggBBkZWXwvzMO9-oR_1-3

#**MÉTODO DE LA BISECCIÓN Y FALSA POSICIÓN**
"""

biseccion=function(f,tol){
  xl=as.double(readline(prompt = "Escriba el valor inferior del intervalo en el que quiere aproximar la raíz " ))  
  xu=as.double(readline(prompt = "Escriba el valor superior del intervalo en el que quiere aproximar la raíz "  ))
  m=as.double(readline(prompt = "Escriba el numero de iteraciones máxima "  ))
  iter=0
  f.l=f(xl)
  f.u=f(xu)
  if(f.l*f.u>0){
    return("El intervalo que dió no tiene raices")
  }
  else{
  while(abs(xu-xl)>tol){
    iter<-iter+1
    if(iter>m){
      warning("Máximo de iterraciones excedido")
      break
    }
    xr<-(xl+xu)/2
    f.r<-f(xr)   
    if(f.l*f.r>0){
      xl<-xr
      f.l<-f.r}
      else{
        xu<-xr
        f.u<-f.r
      }
    }
    raiz<-(xl+xu)/2
    return(cat("La raíz aproximada es",raiz, "y el número de iteraciones es",iter))
    
  }}
  falsa_posicion=function(f,tol){
  xl=as.double(readline(prompt = "Escriba el valor inferior del intervalo en el que quiere aproximar la raíz " ))  
  xu=as.double(readline(prompt = "Escriba el valor superior del intervalo en el que quiere aproximar la raíz "  ))
  m=as.double(readline(prompt = "Escriba el numero de iteraciones máxima "  ))
  iter=0
  f.l=f(xl)
  f.u=f(xu)
  if(f.l*f.u>0){
    return("El intervalo que dió no tiene raices")
  }
  else{
  while(abs(xu-xl)>tol){
    iter<-iter+1
    if(iter>m){
      warning("Máximo de iterraciones excedido")
      break
    }
    xr<-xu-(f.u)*(xl-xu)/(f.l-f.u) 
    f.r<-f(xr)   
    if(f.l*f.r>0){
      xl<-xr
      f.l<-f.r}
      else{
        xu<-xr
        f.u<-f.r
      }
    }
    raiz<-xu-(f.u)*(xl-xu)/(f.l-f.u)
    return(cat("La raíz aproximada es",raiz, "y el número de iteraciones es",iter))
    
  }}
  raices=function(f,tol){
     met=(readline(prompt = "¿Cual método desea utilizar? (Escriba 1 para bisección y 2 para falsa posición) " ))
     if(met==1){
  s=(readline(prompt = "¿quiere encontrar más de una raiz? (Escriba si o no) " ))
  if(s=="si"){
  n1=as.double(readline(prompt = "¿cuantas raices deseas aproximar? " ))
  n=as.integer(n1)
  return(replicate(n,biseccion(f,tol)))
  }
  else{
    r=biseccion(f,tol)
    return(r)}}
else{
      s=(readline(prompt = "¿quiere encontrar más de una raiz?(Escriba si o no) " ))
  if(s=="si"){
  n1=as.double(readline(prompt = "¿cuantas raices deseas aproximar? " ))
  n=as.integer(n1)
  return(replicate(n,falsa_posicion(f,tol)))
  }
  else{
    r=falsa_posicion(f,tol)
    return(r)}}
}

cat("Primero deberá gráficar su función en un intervalo amplio para ver en que subintervalos puede encontrar las raices")

raices(f,10^(-3))

a=as.double(readline(prompt = "Escriba el valor inferior del intervalo " ));
b=as.double(readline(prompt = "Escriba el valor superior del intervalo " ));
f<-function(x){x^3+2*x^2-2*x-2}
x=seq(a,b,by=0.05)
plot(x,f(x),type="l",lwd=3,col="red")
abline(h=0)